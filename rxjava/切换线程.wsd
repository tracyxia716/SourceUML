@startuml 切换线程
actor user

user->Schedulers : 1.io()
Schedulers->RxJavaPlugins : 2.onIoScheduler(Scheduler)
RxJavaPlugins->RxJavaPlugins : 3.apply(Function<T,R>,T)
RxJavaPlugins->user : 4.返回Scheduler对象

user->Observable : 5.subscribeOn(Scheduler)
create ObservableSubscribeOn
Observable -> ObservableSubscribeOn:6.new
Observable->RxJavaPlugins : 7.onAssembly(Observable)
note right : 实际传递的是ObservableSubscribeOn对象
RxJavaPlugins->user : 8.返回Observable


user->Schedulers : 9.newThread
Schedulers->RxJavaPlugins : 10.onNewThreadScheduler(Scheduler)
RxJavaPlugins->RxJavaPlugins : 11.apply(Function<T,R>,T)
RxJavaPlugins->user : 12.返回Scheduler对象



user->Observable : 13.observeOn(Scheduler)
Observable->Observable : 14.observeOn(Scheduler,boolean,int)
note right : 这里第二参数传递的false，第三个参数传递的是Flowable.bufferSize()
create ObservableObserveOn
Observable->ObservableObserveOn:15.创建OservableObser
Oservable->RxJavaPlugins:16.onAssembly(Observable)
RxJavaPlugins->user:17.返回ObservableSubscribeOn对象


user->Observable : 18.subscribe
Observable ->  RxJavaPlugins : 19.onSubscribe(Observable,Observer)
Observable -> ObservableObserveOn : 20.subscribeActual
ObservableObserveOn -> Scheduler : 21.createWorker()
create NewThreadWorker
NewThreadScheduler -> NewThreadWorker : 22.new
NewThreadScheduler -> ObservableObserveOn : 23.返回NewThreadWorker

create ObserveOnObserver
ObservableObserveOn -> ObserveOnObserver : 24.new(Observer, Scheduler.Worker, boolean, int)
ObservableObserveOn -> Observable : 24.subscribe(Observer)
Observable -> RxJavaPlugins : 25.onSubscribe(Observable,Observer)
RxJavaPlugins->Observable : 26.返回ObservableObserveOn
Observable->ObservableSubscribeOn: 27.subscribeActual(Observer)
note right : Observer对象实际上传递的是返回来的返回ObservableObserveOn
create SubscribeOnObserver
ObservableSubscribeOn -> SubscribeOnObserver : 28.new(Observer)
ObservableSubscribeOn -> ObservableObserveOn : 29.onSubscribe(Disposable)
note right : 实际上传递的是刚刚new出来的SubscribeOnObserver









' user->ObservableCreate : 1.subscribeOn()
' create ObservableSubscribeOn
' ObservableCreate -> ObservableSubscribeOn : 2.new
' ObservableCreate->RxJavaPlugins : 3.onAssembly
' RxJavaPlugins -> user : 4.ObservableSubscribeOn
@enduml